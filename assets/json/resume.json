{
  "basics": {
    "name": "Qiujie Cui",
    "label": "Machine Learning Engineer, Roboticist",
    "image": "",
    "email": "qjcuis@gmail.com",
    "url": "https://caseycui.github.io",
    "summary": "Machine Learning Engineer with over 10 years of experience in Machine Learning, Robotics, and Computer Architecture",
    "profiles": [
      {
        "network": "LinkedIn",
        "username": "qjcui",
        "url": "https://www.linkedin.com/in/qjcui/"
      }
    ]
  },
  "work": [
    {
      "name": "Amazon Robotics",
      "position": "Machine Learning Engineer",
      "url": "https://www.aboutamazon.com/news/operations/amazon-robotics-robots-fulfillment-center",
      "startDate": "2021-09",
      "endDate": "present",
      "summary": "Developed ML models, ML pipelines and drove robot system integrations to Amazon warehouse ecosystem at scale.",
      "highlights": ["Large Scale Manipulation, Machine Learning Framework"]
    },
    {
      "name": "Intel Corporation",
      "position": "Software Engineer",
      "startDate": "2013-07",
      "endDate": "2020-10",
      "summary": "Developed software models to simulate and validate architectural components of the Atom CPU line. Contributed to the modeling of 5+ generations of high-performance, low-power CPU architectures, collaborating with design and architecture teams on functional and performance enhancements. Scope of work includes feature incorporation, validation, model development, test methodology development, coverage analysis, bug-reproduction, test environment maintenance.",
      "highlights": ["CPU Architecture, Model & Simulation"]
    }    
  ],
  "volunteer": [
    {
      "organization": "Intel Education Service Corps., USAID",
      "position": "Course Developer and Technical Trainer",
      "url": "https://download.intel.com/newsroom/2021/archive/2015-07-09-editorials-intel-galileo-makers-jordan-amman.pdf",
      "startDate": "2015-05",
      "endDate": "2015-06",
      "summary": "Led a 2-week workshop with team to give training on Intel Galileo Gen2 embedded platform to 70+ students/professors/technicians from 12 universities across Jordan. Developed training material and conducted Galileo-based lab sessions to show how to work with various types of sensors and actuators, as well as some advanced tools such as GPIO driver libraries and Linux programming mode. Float-around debug with different teams to work towards their final projects.",
      "highlights": ["Intel Education Service Corps partners with USAID - Jordan Competitiveness Program to bring a workshop based on Intel Galileo Gen2 Embedded platform."]
    }
  ],
  "education": [
    {
      "institution": "Georgia Institute of Technology, Atlanta, US",
      "location": "Georgia, US",
      "area": "Perception and Robotics, Machine Learning",
      "studyType": "MS",
      "startDate": "2017-09",
      "endDate": "2021-06"
    },
    {
      "institution": "University of Michigan, Ann Arbor, US",
      "location": "Michigan, US",
      "area": "VLSI Design, Embedded Systems",
      "studyType": "MS",
      "startDate": "2011-09",
      "endDate": "2013-05"
    }    
  ],
  "awards": [
    {
      "title": "Design Award",
      "date": "2015-07",
      "awarder": "Intel Developer Forum",
      "url": "https://www.pcworld.com/article/423136/fantastical-pcs-flying-spy-sharks-and-robot-spider-hordes-idf-2015s-coolest-demos.html",
      "summary": "For Flying Spy Shark among other project demos from Intel Austin Makers. The project involves installing a spy camera on an air-swimmer shark balloon to stream live video and enable target tracking on a computer via WiFi. The project utilizes the Intel Edison embedded platform to run the video processing program and control the DC motors on the shark's fins and tail."
    },
    {
      "title": "AMD Design Contest 1st Place",
      "date": "2013-04",
      "awarder": "AMD",
      "summary": "For ASIC design of an ultra-low-power Sub-threshold variation-tolerant 110-tap FIR filter with custom-designed SRAM. Developed a 16-channel digital FIR filter bank, progressing from RTL design to circuit implementation, with optimized data paths for sub-threshold operation. Designed a custom sub-threshold 8-T SRAM incorporating bit-line boosting and body biasing techniques. Implemented dynamic voltage scaling with PVT variation tolerance for SRAM using Canary Logic."
    }    
  ],
  "certificates": [
    {
      "name": "Robotics Software Engineer",
      "date": "2019-01",
      "issuer": "Udacity"
    },
    {
      "name": "Machine Learning Engineer",
      "date": "2017-12",
      "issuer": "BitTiger"
    }
  ],
  "publications": [
    {
      "name": "Demonstrating Large-Scale Package Manipulation via Learned Metrics of Pick Success",
      "publisher": "Robotics Science & Systems 2023",
      "releaseDate": "2023-06",
      "url": "https://arxiv.org/abs/2305.10272",
      "summary": "This paper demonstrates a large-scale package manipulation from unstructured piles in Amazon Robotics' Robot Induction (Robin) fleet, which utilizes a pick success predictor trained on real production data."
    }
  ],
  "skills": [
    {
      "name": "Robotics",
      "level": "Master",
      "keywords": [
        "Perception",
        "Manipulation",
        "Orchestration Systems",
        "Physics Simulation",
        "Large Scale Deployment"
      ]
    },
    {
      "name": "Machine Learning",
      "level": "Master",
      "keywords": [
        "VLM/LLM",
        "Deep Neural Networks",
        "Generative Models",
        "Algorithms",
        "ML systems"        
      ]
    },
    {
      "name": "VLSI",
      "level": "Master",
      "keywords": [
        "Computer Architecture",
        "VLSI Design"
      ]
    }    
  ],
  "languages": [
    {
      "language": "Python",
      "icon": ""
    },
    {
      "language": "C/C++",
      "icon": ""
    },
    {
      "language": "Java",
      "icon": ""
    },
    {
      "language": "Kotlin",
      "icon": ""
    },
    {
      "language": "Verilog, System Verilog, VHDL",
      "icon": ""
    }     
  ],
  "interests": [
    {
      "name": "Robotics",
      "icon": "fa-solid fa-tag",
      "keywords": [
        "Diffusion Policy",
        "Imitation Learning",
        "VLM/LLM",
        "Spatial Reasoning",
        "Long-horizon Tasks",
        "Kitchen/Household"
      ]
    },
    {
      "name": "Machine Learning",
      "icon": "fa-solid fa-tag",
      "keywords": [
        "Generative Models",
        "LLM",
        "Imitation Learning",
        "Reinforcement Learning",
        "Deep Neural Networks"        
      ]
    }    
  ],
  "projects": [
    {
      "name": "Quipster Chatbot",
      "summary": "Developed an LLM-based chatbot using Amazon Q and Retrieval-Augmented Generation (RAG) to efficiently index and search internal wikis and Quip documents through fast keyword-based queries.",
      "highlights": ["LLM", "RAG"],
      "startDate": "2024-07",
      "endDate": "2024-09"
    },
    {
      "name": "Robot Arm Pick and Place",
      "summary": "Developed ROS service nodes for Forward and Inverse Kinematics solvers for the KR-210 (6 DOF) robot, enabling item retrieval from random shelf locations and placement in designated bins using Gazebo simulation environment and MoveIt route planning for collision avoidance.",
      "highlights": ["Motion Planning", "Forward & Inverse Kinematics"]
    },
    {
      "name": "3D Perception -- perception and detection of objects using camera Point Cloud data",
      "summary": "Implemented a filtering pipeline (including statistical outlier filter, down-sampling, passthrough filter, and RANSAC plane fitting) on Point Cloud data from a ROS camera capturing a simulated desktop in Gazebo.Utilized KD-tree clustering to group filtered points and trained a Support Vector Machine (SVM) using HSV histogram and surface vector features to classify each Point Cloud cluster.",
      "highlights": ["Perception", "Point Cloud Filter Pipeline"]
    },
    {
      "name": "Follow Me -- Human Target Detection and Tracking via Semantic Segmentation",
      "summary": "Collected training and validation data with drone filming person of interest walking in a crowd with different backgrounds in the Unity simulation environment.Designed and trained neural network (depth of 4 encoder/decoder layers and 1x1 convolution layer) for semantic segmentation -- to parse a test image and identify the target, crowd and background in the image pixels for drone to follow the target.",
      "highlights": ["Sementic Segmentation", "Deep Neural Network"]
    },
    {
      "name": "Mountain Rover -- Terrain Mapping and Mineral Exploration",
      "summary": "Collected image data of a rover treading in a territory with mountains, sand and rock samples in the Unity simulated environment. Implemented color threshold and coordinate transformation algorithms to update area map (bird's eye view) with open path, obstacles and rock sample. Implemented algorithm to drive rover in direction of open path.",
      "highlights": ["Computer Vision", "Area Map Building"]
    },
    {
      "name": "Video target tracking using Kalman filter and Particle Filter",
      "summary": "Tracked target person/object in video footage using continuous template update as target moves in/out, turns or even being occluded for a short period of time. Successful tracking using both Kalman filter and Particle Filter modeling of target velocity with measurement noise and movement uncertainty.",
      "highlights": ["Target Tracking", "Kalman Filter", "Particle Filter"]
    },
    {
      "name": "Video Stabilization using L1 trend fitting",
      "summary": "Extracted frames from shaky footage and computed original camera path, and applied L1 trend fitting using 1st order, 2nd order and 3rd order derivative to generate desired smooth path with frame constraints. Back-calculated corrective matrix for each frame and applied to original footage to get stabilized video.",
      "highlights": ["Computer Vision", "Linear Programming"]
    },
    {
      "name": "Fashion Recognition with Deep Neural Network",
      "summary": "Trained  a deep neural network over Deep Fashion Data set (800K labeled images) to recognize and categorize fashion items to a top3 accuracy of 86% among 50 categories. Based off ResNet-50, split the 2nd-to-last layer into bounding-box prediction and category prediction training to improve accuracy; break data set into 4 groups to train and cross-validation.",
      "highlights": ["ResNet-50", "Deep Neural Network"]
    },
    {
      "name": "Warehouse Robot Navigation and Object Retrieval Simulation",
      "summary": "Simulated a robot with noisy sensor and actuator to move around in an unknown warehouse with a given number of boxes to pick up. Path planning using A* search algorithm and smoothing. Using online SLAM to map environment and localize robot",
      "highlights": ["SLAM", "A* Search"]
    },
    {
      "name": "Flying Spy Shark -- Camera-Equipped Toddler Safety Tracker",
      "summary": "Developed and installed a spy camera on an air-swimmer Shark balloon to stream live video via Wi-Fi to a computer, while tracking a toddler target. Utilized Intel Edison embedded platform to execute OpenCV-based video processing and control DC motors for the shark's fin and tail movements.",
      "highlights": ["Lightweight Embedded System", "Computer Vision"]
    },
    {
      "name": "Isolation Game AI Player",
      "summary": "Implemented game bot for a two-player isolation game using MiniMax strategy to maximize evaluation function outcome for game bot. Optimized game bot via decision-tree alpha-beta pruning, iterative deepening, and custom evaluation function to beat naive bot 99.9% of time.",
      "highlights": ["Decision Tree", "Alpha-beta Pruning"]
    },
    {
      "name": "ASIC Design of Ultra-Low Power FIR Filter with Custom SRAM Design",
      "summary": "Developed a 16-channel digital FIR filter bank, progressing from RTL design to circuit implementation, with optimized data paths for sub-threshold operation. Designed a custom sub-threshold 8-T SRAM incorporating bit-line boosting and body biasing techniques. Implemented dynamic voltage scaling with PVT variation tolerance for SRAM using Canary Logic.",
      "highlights": ["Ultra-Low Power", "ASIC Design"]
    }
  ]
}
